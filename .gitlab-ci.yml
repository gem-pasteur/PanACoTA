image: registry-gitlab.pasteur.fr/aperrin/pipeline_annotation/testing-ubuntu


stages:
  - build
  - test
  - test2
  - coverage
  - doc
  - deploy
  - github


build-from-ubuntu:
  image: registry-gitlab.pasteur.fr/aperrin/pipeline_annotation/install-ubuntu
  stage: build
  only:
    - install
  script:
    - pip3 install --upgrade pip
    - pip3 install -r requirements-dev.txt
    - py.test test/test_install/test_make_ubuntu.py -xv

build-from-barrnap:
  image: registry-gitlab.pasteur.fr/aperrin/pipeline_annotation/install-ubuntu-barrnaponly
  stage: build
  only:
    - install
  script:
    - pip3 install --upgrade pip
    - pip3 install -r requirements-dev.txt
    - py.test test/test_install/test_make_barrnap.py -xv

build-from-prokka-quicktree:
  image: registry-gitlab.pasteur.fr/aperrin/pipeline_annotation/install-ubuntu-annote-quicktree
  stage: build
  only:
    - install
  script:
    - pip3 install --upgrade pip
    - pip3 install -e .[dev]
    - py.test test/test_install/test_make_prokka-quicktree.py -xv

build-from-prodigal:
  image: registry-gitlab.pasteur.fr/aperrin/pipeline_annotation/install-prodigal
  stage: build
  only:
    - install
  script:
    - pip3 install --upgrade pip
    - pip3 install -r requirements-dev.txt
    - py.test test/test_install/test_make_prodigal.py -xv

build-from-test-image:
  stage: build
  only:
    - install
  script:
    - pip3 install --upgrade pip
    - pip3 install -r requirements-dev.txt
    - pip install git+https://github.com/chasemc/ncbi-genome-download@4c5c24e27aa8123c7995890046b17b815da3571b 
    - py.test test/test_install/test_make_all-installed.py -xv


unit-test-ubuntu:
  stage: test
  except:
    - docker
    - helpers
    - install
  before_script:
    - pip3 install --upgrade pip
    - pip3 install -r requirements-dev.txt
    - pip install git+https://github.com/chasemc/ncbi-genome-download@4c5c24e27aa8123c7995890046b17b815da3571b 
    - ./make
  script:
    - pwd
    - ls Examples/genomes_init/genome1.fst
    - py.test test/test_unit/test_utils.py -vx
    - py.test test/test_unit/test_utils-logging.py -xv
    - py.test test/test_unit/test_utils-pan.py -vx
    - py.test test/test_unit/test_utils-argparse.py -vx
    - py.test test/test_unit/test_prepare -v -x
    - py.test test/test_unit/test_annotate/test_genome_func.py -vx
    - py.test test/test_unit/test_annotate/test_annotation*  -vx
    - py.test test/test_unit/test_annotate/test_format* -v -x
    - py.test test/test_unit/test_pangenome -vx
    - py.test test/test_unit/test_corepers -vx
    - py.test test/test_unit/test_align -vx
    - py.test test/test_unit/test_tree -xv
    # - coverage report
    - mv .coverage .coverage.unit
  artifacts:
    paths:
      - .coverage.unit
    expire_in: 1 hour

func-test-ubuntu:
  stage: test
  except:
    - docker
    - helpers
    - install
  before_script:
    - pip3 install --upgrade pip
    - pip3 install -r requirements-dev.txt
    - pip install git+https://github.com/chasemc/ncbi-genome-download@4c5c24e27aa8123c7995890046b17b815da3571b 
    - ./make
  script:
    - pwd
    - py.test test/test_functional/test_pangenome.py -vx
    - py.test test/test_functional/test_pangenome-parser.py -vx
    - py.test test/test_functional/test_corepers* -vx
    - py.test test/test_functional/test_align-parser.py -vx
    - py.test test/test_functional/test_align.py -vx
    - py.test test/test_functional/test_tree* -vx
    - py.test test/test_functional/test_annote-parser.py -vx
    - py.test test/test_functional/test_annote.py -xv
    - py.test test/test_functional/test_all* -vx
    - py.test test/test_functional/test_prepare* -vx
    # - coverage report
    - mv .coverage .coverage.functional
  artifacts:
    paths:
      - .coverage.functional
    expire_in: 1 hour
    

coverage:
  stage: coverage
  except:
    - docker
    - helpers
    - install
  dependencies:
    - unit-test-ubuntu
    - func-test-ubuntu
  before_script:
    - pip3 install --upgrade pip
    - pip3 install -r requirements-dev.txt
  script:
    - pwd
    - coverage combine .coverage.unit .coverage.functional
    - coverage html
    - coverage report
    # test coverage parsing: \d+\%\s*$
    # or pytest-cov (Python): ^TOTAL.+?(\d+\%)$
  artifacts:
    paths:
      - htmlcov
    expire_in: 1 hour


sphinx-doc:
  stage: doc
  only:
    - master
    - documentation
  before_script:
    - pip3 install -r requirements-dev.txt
    - ./make
  script:
    - cd doc/source
    - make html
  artifacts:
    paths:
      - doc/build/html
    expire_in: 1 hour


pages:
  stage: deploy
  only:
    - doc
    - master
  dependencies:
    - coverage
    - sphinx-doc
  script:
    - mkdir -p public/htmlcov
    - mv htmlcov public
    - mkdir -p public/html-doc
    - mv doc/build/html html-doc
    - mv html-doc public
  artifacts:
    paths:
      - public
    expire_in: 1 hour
